openapi: 3.0.0
info:
  title: SigmaSchedule API
  version: 1.0.0
paths:
  /api/auth:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - username
                - firstname
                - lastname
                - email
                - password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /api/auth/login:
    post:
      summary: Sign in an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
        '400':
          description: Malformed request
  /api/clubs:
    post:
      summary: Create a new club
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        '201':
          description: Club created
        '400':
          description: Invalid club data
  /api/clubs/{clubId}/users:
    post:
      summary: Add a user to a club
      parameters:
        - in: path
          name: clubId
          required: true
          schema:
            type: string
          description: UUID of the club
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum: [ admin, member ]
              required:
                - userId
                - role
      responses:
        '200':
          description: User added to club
        '400':
          description: Invalid request data
        '404':
          description: Club or user not found
        '409':
          description: User already in club
  /api/clubs/{clubId}/invite:
    post:
      summary: Invite a user to a club
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                clubId:
                  type: string
                role:
                  type: string
              required:
                - email
                - inviter
                - clubId
                - role
      responses:
        '200':
          description: Invitation sent
        '404':
          description: Club not found
        '400':
          description: Invalid request