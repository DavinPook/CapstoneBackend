openapi: 3.0.3
info:
  title: Task & Event API
  version: 1.2.0

paths:
  /api/tasks:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /api/tasks/{taskId}:
    put:
      summary: Update a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Delete a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Task deleted

  /api/events:
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /api/events/{eventId}:
    put:
      summary: Update an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '200':
          description: Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    delete:
      summary: Delete an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Event deleted

components:
  schemas:
    TaskInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        clubIds:
          type: array
          items:
            type: string
            format: uuid
        priority:
          type: string
          enum: [low, medium, high]
        parentEventId:
          type: string
          format: uuid
        notification:
          $ref: '#/components/schemas/NotificationInput'

    Task:
      allOf:
        - $ref: '#/components/schemas/TaskInput'
        - type: object
          properties:
            id:
              type: string
              format: uuid

    EventInput:
      type: object
      required:
        - title
        - start_time
        - end_time
      properties:
        title:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
        description:
          type: string
        clubIds:
          type: array
          items:
            type: string
            format: uuid
        parentEventId:
          type: string
          format: uuid
        notification:
          $ref: '#/components/schemas/NotificationInput'

    Event:
      allOf:
        - $ref: '#/components/schemas/EventInput'
        - type: object
          properties:
            event_id:
              type: string
              format: uuid

    NotificationInput:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        notify_before_minutes:
          type: integer
        sent:
          type: boolean