{
	"info": {
		"_postman_id": "cbba3c79-0346-4753-ab3c-6e4d0177862d",
		"name": "Get Activities",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46308101",
		"_collection_link": "https://michellewong-8956492.postman.co/workspace/Michelle-Wong's-Workspace~eb3df9cc-fb49-40c3-8181-9b5c55b64548/collection/46308101-cbba3c79-0346-4753-ab3c-6e4d0177862d?action=share&source=collection_link&creator=46308101"
	},
	"item": [
		{
			"name": "Get Activites - Normal All Results",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  let date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  let yyyy = date.getFullYear();",
							"  let mm = String(date.getMonth() + 1).padStart(2, '0');",
							"  let dd = String(date.getDate()).padStart(2, '0');",
							"  let hh = String(date.getHours()).padStart(2, '0');",
							"  let min = String(date.getMinutes()).padStart(2, '0');",
							"  let ss = String(date.getSeconds()).padStart(2, '0');",
							"  return `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;",
							"}",
							"",
							"// Date range for randoms",
							"let rangeStart = new Date(2025, 0, 1);  ",
							"let rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// Step 1: Create User",
							"pm.sendRequest({",
							"    url: \"http://localhost:8080/api/auth\",",
							"    method: \"POST\",",
							"    header: { \"Content-Type\": \"application/json\" },",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            firstName: pm.variables.replaceIn(\"{{$randomFirstName}}\"),",
							"            lastName: pm.variables.replaceIn(\"{{$randomLastName}}\"),",
							"            email: pm.variables.replaceIn(\"{{$randomEmail}}\"),",
							"            password: pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\")",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.error(\"Error creating user:\", err);",
							"        return;",
							"    }",
							"    let json = res.json();",
							"    let userId = json.userId || json.id;",
							"    pm.environment.set(\"userId\", userId);",
							"",
							"    // Step 2a: Create Club A",
							"    pm.sendRequest({",
							"        url: \"http://localhost:8080/api/clubs\",",
							"        method: \"POST\",",
							"        header: { \"Content-Type\": \"application/json\" },",
							"        body: {",
							"            mode: \"raw\",",
							"            raw: JSON.stringify({",
							"                name: \"Club A \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                description: \"Main club\"",
							"            })",
							"        }",
							"    }, function (err2, res2) {",
							"        if (err2) {",
							"            console.error(\"Error creating club A:\", err2);",
							"            return;",
							"        }",
							"        let clubIdA = res2.json().clubId || res2.json().id;",
							"        pm.environment.set(\"clubIdA\", clubIdA);",
							"",
							"        // Step 2b: Create Club B",
							"        pm.sendRequest({",
							"            url: \"http://localhost:8080/api/clubs\",",
							"            method: \"POST\",",
							"            header: { \"Content-Type\": \"application/json\" },",
							"            body: {",
							"                mode: \"raw\",",
							"                raw: JSON.stringify({",
							"                    name: \"Club B \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                    description: \"Secondary club\"",
							"                })",
							"            }",
							"        }, function (err3, res3) {",
							"            if (err3) {",
							"                console.error(\"Error creating club B:\", err3);",
							"                return;",
							"            }",
							"            let clubIdB = res3.json().clubId || res3.json().id;",
							"            pm.environment.set(\"clubIdB\", clubIdB);",
							"",
							"            // Store main club (the one with 6 activities)",
							"            pm.environment.set(\"mainClubId\", clubIdA);",
							"",
							"            // Step 3: Generate 10 activities",
							"            for (let i = 0; i < 10; i++) {",
							"                let isEvent = i % 2 === 0; // alternate event/task",
							"                let clubId = i < 6 ? clubIdA : clubIdB;",
							"                let startDate = randomDate(rangeStart, rangeEnd);",
							"                let endDate = randomDate(new Date(startDate), rangeEnd);",
							"",
							"                if (isEvent) {",
							"                    // Create Event",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/events\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Event \" + (i+1),",
							"                                startTime: startDate,",
							"                                endTime: endDate,",
							"                                location: \"Location \" + (i+1),",
							"                                description: \"Generated event \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errE, resE) {",
							"                        if (errE) console.error(\"Error creating event\", i+1, errE);",
							"                    });",
							"                } else {",
							"                    // Create Task",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/tasks\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Task \" + (i+1),",
							"                                dueDate: startDate,",
							"                                description: \"Generated task \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                priority: \"HIGH\",",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errT, resT) {",
							"                        if (errT) console.error(\"Error creating task\", i+1, errT);",
							"                    });",
							"                }",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clubs/activity?clubId={{mainClubId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clubs",
						"activity"
					],
					"query": [
						{
							"key": "clubId",
							"value": "{{mainClubId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activites - Paginated Sorted By Title",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  let date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  let yyyy = date.getFullYear();",
							"  let mm = String(date.getMonth() + 1).padStart(2, '0');",
							"  let dd = String(date.getDate()).padStart(2, '0');",
							"  let hh = String(date.getHours()).padStart(2, '0');",
							"  let min = String(date.getMinutes()).padStart(2, '0');",
							"  let ss = String(date.getSeconds()).padStart(2, '0');",
							"  return `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;",
							"}",
							"",
							"// Date range for randoms",
							"let rangeStart = new Date(2025, 0, 1);  ",
							"let rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// Step 1: Create User",
							"pm.sendRequest({",
							"    url: \"http://localhost:8080/api/auth\",",
							"    method: \"POST\",",
							"    header: { \"Content-Type\": \"application/json\" },",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            firstName: pm.variables.replaceIn(\"{{$randomFirstName}}\"),",
							"            lastName: pm.variables.replaceIn(\"{{$randomLastName}}\"),",
							"            email: pm.variables.replaceIn(\"{{$randomEmail}}\"),",
							"            password: pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\")",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.error(\"Error creating user:\", err);",
							"        return;",
							"    }",
							"    let json = res.json();",
							"    let userId = json.userId || json.id;",
							"    pm.environment.set(\"userId\", userId);",
							"",
							"    // Step 2a: Create Club A",
							"    pm.sendRequest({",
							"        url: \"http://localhost:8080/api/clubs\",",
							"        method: \"POST\",",
							"        header: { \"Content-Type\": \"application/json\" },",
							"        body: {",
							"            mode: \"raw\",",
							"            raw: JSON.stringify({",
							"                name: \"Club A \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                description: \"Main club\"",
							"            })",
							"        }",
							"    }, function (err2, res2) {",
							"        if (err2) {",
							"            console.error(\"Error creating club A:\", err2);",
							"            return;",
							"        }",
							"        let clubIdA = res2.json().clubId || res2.json().id;",
							"        pm.environment.set(\"clubIdA\", clubIdA);",
							"",
							"        // Step 2b: Create Club B",
							"        pm.sendRequest({",
							"            url: \"http://localhost:8080/api/clubs\",",
							"            method: \"POST\",",
							"            header: { \"Content-Type\": \"application/json\" },",
							"            body: {",
							"                mode: \"raw\",",
							"                raw: JSON.stringify({",
							"                    name: \"Club B \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                    description: \"Secondary club\"",
							"                })",
							"            }",
							"        }, function (err3, res3) {",
							"            if (err3) {",
							"                console.error(\"Error creating club B:\", err3);",
							"                return;",
							"            }",
							"            let clubIdB = res3.json().clubId || res3.json().id;",
							"            pm.environment.set(\"clubIdB\", clubIdB);",
							"",
							"            // Store main club (the one with 6 activities)",
							"            pm.environment.set(\"mainClubId\", clubIdA);",
							"",
							"            // Step 3: Generate 10 activities",
							"            for (let i = 0; i < 10; i++) {",
							"                let isEvent = i % 2 === 0; // alternate event/task",
							"                let clubId = i < 6 ? clubIdA : clubIdB;",
							"                let startDate = randomDate(rangeStart, rangeEnd);",
							"                let endDate = randomDate(new Date(startDate), rangeEnd);",
							"",
							"                if (isEvent) {",
							"                    // Create Event",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/events\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Event \" + (i+1),",
							"                                startTime: startDate,",
							"                                endTime: endDate,",
							"                                location: \"Location \" + (i+1),",
							"                                description: \"Generated event \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errE, resE) {",
							"                        if (errE) console.error(\"Error creating event\", i+1, errE);",
							"                    });",
							"                } else {",
							"                    // Create Task",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/tasks\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Task \" + (i+1),",
							"                                dueDate: startDate,",
							"                                description: \"Generated task \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                priority: \"HIGH\",",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errT, resT) {",
							"                        if (errT) console.error(\"Error creating task\", i+1, errT);",
							"                    });",
							"                }",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clubs/activity?clubId={{mainClubId}}&sort=title&page=0&size=10\n",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clubs",
						"activity"
					],
					"query": [
						{
							"key": "clubId",
							"value": "{{mainClubId}}"
						},
						{
							"key": "sort",
							"value": "title"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10\n"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activites - Paginated Sorted By Date",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  let date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  let yyyy = date.getFullYear();",
							"  let mm = String(date.getMonth() + 1).padStart(2, '0');",
							"  let dd = String(date.getDate()).padStart(2, '0');",
							"  let hh = String(date.getHours()).padStart(2, '0');",
							"  let min = String(date.getMinutes()).padStart(2, '0');",
							"  let ss = String(date.getSeconds()).padStart(2, '0');",
							"  return `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;",
							"}",
							"",
							"// Date range for randoms",
							"let rangeStart = new Date(2025, 0, 1);  ",
							"let rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// Step 1: Create User",
							"pm.sendRequest({",
							"    url: \"http://localhost:8080/api/auth\",",
							"    method: \"POST\",",
							"    header: { \"Content-Type\": \"application/json\" },",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            firstName: pm.variables.replaceIn(\"{{$randomFirstName}}\"),",
							"            lastName: pm.variables.replaceIn(\"{{$randomLastName}}\"),",
							"            email: pm.variables.replaceIn(\"{{$randomEmail}}\"),",
							"            password: pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\")",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.error(\"Error creating user:\", err);",
							"        return;",
							"    }",
							"    let json = res.json();",
							"    let userId = json.userId || json.id;",
							"    pm.environment.set(\"userId\", userId);",
							"",
							"    // Step 2a: Create Club A",
							"    pm.sendRequest({",
							"        url: \"http://localhost:8080/api/clubs\",",
							"        method: \"POST\",",
							"        header: { \"Content-Type\": \"application/json\" },",
							"        body: {",
							"            mode: \"raw\",",
							"            raw: JSON.stringify({",
							"                name: \"Club A \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                description: \"Main club\"",
							"            })",
							"        }",
							"    }, function (err2, res2) {",
							"        if (err2) {",
							"            console.error(\"Error creating club A:\", err2);",
							"            return;",
							"        }",
							"        let clubIdA = res2.json().clubId || res2.json().id;",
							"        pm.environment.set(\"clubIdA\", clubIdA);",
							"",
							"        // Step 2b: Create Club B",
							"        pm.sendRequest({",
							"            url: \"http://localhost:8080/api/clubs\",",
							"            method: \"POST\",",
							"            header: { \"Content-Type\": \"application/json\" },",
							"            body: {",
							"                mode: \"raw\",",
							"                raw: JSON.stringify({",
							"                    name: \"Club B \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                    description: \"Secondary club\"",
							"                })",
							"            }",
							"        }, function (err3, res3) {",
							"            if (err3) {",
							"                console.error(\"Error creating club B:\", err3);",
							"                return;",
							"            }",
							"            let clubIdB = res3.json().clubId || res3.json().id;",
							"            pm.environment.set(\"clubIdB\", clubIdB);",
							"",
							"            // Store main club (the one with 6 activities)",
							"            pm.environment.set(\"mainClubId\", clubIdA);",
							"",
							"            // Step 3: Generate 10 activities",
							"            for (let i = 0; i < 10; i++) {",
							"                let isEvent = i % 2 === 0; // alternate event/task",
							"                let clubId = i < 6 ? clubIdA : clubIdB;",
							"                let startDate = randomDate(rangeStart, rangeEnd);",
							"                let endDate = randomDate(new Date(startDate), rangeEnd);",
							"",
							"                if (isEvent) {",
							"                    // Create Event",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/events\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Event \" + (i+1),",
							"                                startTime: startDate,",
							"                                endTime: endDate,",
							"                                location: \"Location \" + (i+1),",
							"                                description: \"Generated event \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errE, resE) {",
							"                        if (errE) console.error(\"Error creating event\", i+1, errE);",
							"                    });",
							"                } else {",
							"                    // Create Task",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/tasks\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Task \" + (i+1),",
							"                                dueDate: startDate,",
							"                                description: \"Generated task \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                priority: \"HIGH\",",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errT, resT) {",
							"                        if (errT) console.error(\"Error creating task\", i+1, errT);",
							"                    });",
							"                }",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clubs/activity?clubId={{mainClubId}}&sort=date&page=0&size=10\n",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clubs",
						"activity"
					],
					"query": [
						{
							"key": "clubId",
							"value": "{{mainClubId}}"
						},
						{
							"key": "sort",
							"value": "date"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10\n"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activites - Filter by Search Result",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// --- Random Date Generator ---",
							"function randomDate(start, end) {",
							"  let date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
							"  let yyyy = date.getFullYear();",
							"  let mm = String(date.getMonth() + 1).padStart(2, '0');",
							"  let dd = String(date.getDate()).padStart(2, '0');",
							"  let hh = String(date.getHours()).padStart(2, '0');",
							"  let min = String(date.getMinutes()).padStart(2, '0');",
							"  let ss = String(date.getSeconds()).padStart(2, '0');",
							"  return `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;",
							"}",
							"",
							"// Date range for randoms",
							"let rangeStart = new Date(2025, 0, 1);  ",
							"let rangeEnd   = new Date(2025, 11, 31);",
							"",
							"// Step 1: Create User",
							"pm.sendRequest({",
							"    url: \"http://localhost:8080/api/auth\",",
							"    method: \"POST\",",
							"    header: { \"Content-Type\": \"application/json\" },",
							"    body: {",
							"        mode: \"raw\",",
							"        raw: JSON.stringify({",
							"            firstName: pm.variables.replaceIn(\"{{$randomFirstName}}\"),",
							"            lastName: pm.variables.replaceIn(\"{{$randomLastName}}\"),",
							"            email: pm.variables.replaceIn(\"{{$randomEmail}}\"),",
							"            password: pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\")",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.error(\"Error creating user:\", err);",
							"        return;",
							"    }",
							"    let json = res.json();",
							"    let userId = json.userId || json.id;",
							"    pm.environment.set(\"userId\", userId);",
							"",
							"    // Step 2a: Create Club A",
							"    pm.sendRequest({",
							"        url: \"http://localhost:8080/api/clubs\",",
							"        method: \"POST\",",
							"        header: { \"Content-Type\": \"application/json\" },",
							"        body: {",
							"            mode: \"raw\",",
							"            raw: JSON.stringify({",
							"                name: \"Club A \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                description: \"Main club\"",
							"            })",
							"        }",
							"    }, function (err2, res2) {",
							"        if (err2) {",
							"            console.error(\"Error creating club A:\", err2);",
							"            return;",
							"        }",
							"        let clubIdA = res2.json().clubId || res2.json().id;",
							"        pm.environment.set(\"clubIdA\", clubIdA);",
							"",
							"        // Step 2b: Create Club B",
							"        pm.sendRequest({",
							"            url: \"http://localhost:8080/api/clubs\",",
							"            method: \"POST\",",
							"            header: { \"Content-Type\": \"application/json\" },",
							"            body: {",
							"                mode: \"raw\",",
							"                raw: JSON.stringify({",
							"                    name: \"Club B \" + pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\"),",
							"                    description: \"Secondary club\"",
							"                })",
							"            }",
							"        }, function (err3, res3) {",
							"            if (err3) {",
							"                console.error(\"Error creating club B:\", err3);",
							"                return;",
							"            }",
							"            let clubIdB = res3.json().clubId || res3.json().id;",
							"            pm.environment.set(\"clubIdB\", clubIdB);",
							"",
							"            // Store main club (the one with 6 activities)",
							"            pm.environment.set(\"mainClubId\", clubIdA);",
							"",
							"            // Step 3: Generate 10 activities",
							"            for (let i = 0; i < 10; i++) {",
							"                let isEvent = i % 2 === 0; // alternate event/task",
							"                let clubId = i < 6 ? clubIdA : clubIdB;",
							"                let startDate = randomDate(rangeStart, rangeEnd);",
							"                let endDate = randomDate(new Date(startDate), rangeEnd);",
							"",
							"                if (isEvent) {",
							"                    // Create Event",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/events\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Event \" + (i+1),",
							"                                startTime: startDate,",
							"                                endTime: endDate,",
							"                                location: \"Location \" + (i+1),",
							"                                description: \"Generated event \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errE, resE) {",
							"                        if (errE) console.error(\"Error creating event\", i+1, errE);",
							"                    });",
							"                } else {",
							"                    // Create Task",
							"                    pm.sendRequest({",
							"                        url: \"http://localhost:8080/api/tasks\",",
							"                        method: \"POST\",",
							"                        header: { \"Content-Type\": \"application/json\" },",
							"                        body: {",
							"                            mode: \"raw\",",
							"                            raw: JSON.stringify({",
							"                                title: \"Task \" + (i+1),",
							"                                dueDate: startDate,",
							"                                description: \"Generated task \" + (i+1),",
							"                                notification: { notifyBeforeMinutes: 30 },",
							"                                clubs: [clubId],",
							"                                priority: \"HIGH\",",
							"                                userId: userId",
							"                            })",
							"                        }",
							"                    }, function (errT, resT) {",
							"                        if (errT) console.error(\"Error creating task\", i+1, errT);",
							"                    });",
							"                }",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clubs/activity?clubId={{mainClubId}}&sort=date&page=0&size=10&search=Event%201\n",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clubs",
						"activity"
					],
					"query": [
						{
							"key": "clubId",
							"value": "{{mainClubId}}"
						},
						{
							"key": "sort",
							"value": "date"
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "search",
							"value": "Event%201\n"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "activities",
			"value": ""
		},
		{
			"key": "clubIdA",
			"value": ""
		},
		{
			"key": "clubIdB",
			"value": ""
		},
		{
			"key": "mainClubId",
			"value": ""
		}
	]
}